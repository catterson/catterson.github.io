fig <- hist(d$self.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
fig <- hist(d$class.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Perceptions of Classmates)")
abline(v = mean(d$class.skills), lwd = 4, col = 'red')
abline(v = mean(d$class.skills) + sd(d$class.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$class.skills) - sd(d$class.skills), lwd = 2, lty = "dashed", col = 'red')
fig <- hist(d$self.skills+.001, breaks = 4,
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
d <- read.csv("~/Downloads/grad_onboard_SP25.csv", stringsAsFactors = T, na.strings = "")
par(mfrow = c(1,2))
hist(d$self.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
hist(d$class.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Perceptions of Classmates)")
abline(v = mean(d$class.skills), lwd = 4, col = 'red')
abline(v = mean(d$class.skills) + sd(d$class.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$class.skills) - sd(d$class.skills), lwd = 2, lty = "dashed", col = 'red')
plot(as.factor(d$self.skills),
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
mean(d$self.skills)
sd(d$self.skills)
hist(d$class.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Perceptions of Classmates)")
abline(v = mean(d$class.skills), lwd = 4, col = 'red')
abline(v = mean(d$class.skills) + sd(d$class.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$class.skills) - sd(d$class.skills), lwd = 2, lty = "dashed", col = 'red')
plot(as.factor(d$self.skills),
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
hist(d$self.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
hist(d$self.skills, breaks = 4,
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
hist(d$self.skills, breaks = 10,
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
hist(d$self.skills, breaks = 5,
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
hist(d$self.skills, breaks = 6,
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
hist(d$self.skills, breaks = c(1:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
hist(d$self.skills, breaks = c(.5:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
hist(d$self.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
hist(d$class.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Perceptions of Classmates)")
abline(v = mean(d$class.skills), lwd = 4, col = 'red')
abline(v = mean(d$class.skills) + sd(d$class.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$class.skills) - sd(d$class.skills), lwd = 2, lty = "dashed", col = 'red')
d$epistemology
d <- read.csv("~/Downloads/grad_onboard_SP25.csv", stringsAsFactors = T, na.strings = "")
par(mfrow = c(1,2))
hist(d$self.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
hist(d$class.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Perceptions of Classmates)")
abline(v = mean(d$class.skills), lwd = 4, col = 'red')
abline(v = mean(d$class.skills) + sd(d$class.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$class.skills) - sd(d$class.skills), lwd = 2, lty = "dashed", col = 'red')
mean(d$self.skills)
mean(d$class.skills)
sd(d$self.skills)
sd(d$class.skills)
range(d$self.skills)
range(d$self.skills)
d[,7:16] <- lapply(d[,7:16], factor, levels = c("No", "Maybe", "Yes"))
par(mfrow = c(2,5), cex = .5)
graph.names <- c("Can Import Data", "Can Clean Data", "Can Graph a Variable", "Can Render Markdown", "Can Define LM",
"Can Interpret a LM", "Can Interpret NHST", "Can Differentiate \nSD and SE", "Can Interpret 95% CI", "Can For-Loop")
for(i in c(7:16)){
plot(d[,i], main = paste(graph.names[i-6]))
}
sd(d$self.skills)
sd(d$class.skills)
d <- read.csv("~/Downloads/grad_onboard_SP25.csv", stringsAsFactors = T, na.strings = "")
par(mfrow = c(1,2))
hist(d$self.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills), lwd = 2, lty = "dashed", col = 'red')
hist(d$class.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Perceptions of Classmates)")
abline(v = mean(d$class.skills), lwd = 4, col = 'red')
abline(v = mean(d$class.skills) + sd(d$class.skills), lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$class.skills) - sd(d$class.skills), lwd = 2, lty = "dashed", col = 'red')
mean(d$self.skills)
mean(d$class.skills)
sd(d$self.skills)
sd(d$class.skills)
range(d$self.skills)
range(d$self.skills)
d[,7:16] <- lapply(d[,7:16], factor, levels = c("No", "Maybe", "Yes"))
par(mfrow = c(2,5), cex = .5)
graph.names <- c("Can Import Data", "Can Clean Data", "Can Graph a Variable", "Can Render Markdown", "Can Define LM",
"Can Interpret a LM", "Can Interpret NHST", "Can Differentiate \nSD and SE", "Can Interpret 95% CI", "Can For-Loop")
for(i in c(7:16)){
plot(d[,i], main = paste(graph.names[i-6]))
}
d <- read.csv("~/Dropbox/!GRADSTATS/Datasets/Perceptions of the Wealthy/Dawtry 2015 Study 1a.csv", stringsAsFactors = T, na.strings = "")
names(d)
d <- read.csv("~/Dropbox/!GRADSTATS/Datasets/Perceptions of the Wealthy/Dawtry 2015 Study 1a.csv", # my file path
stringsAsFactors = T, # to convert strings into factors
na.strings = "") # empty data --> NA
head(d) # did it work?
nrow(d)
hist(d$Household_Income)
hist(d$Household_Income, breaks = 20)
names(d)
names(selfes)
selfes <- read.csv("../datasets/Self-Esteem Dataset/data.csv",
stringsAsFactors = T,
na.strings = "0")
head(selfes) # checking to make sure it loaded okay
selfes$Q1 #
nrow(selfes) # sample size
selfes <- read.csv("../datasets/Self-Esteem Dataset/data.csv",
stringsAsFactors = T,
na.strings = "0", sep = "\t")
selfes <- read.csv("../datasets/Self-Esteem Dataset/data.csv",
stringsAsFactors = T,
na.strings = "0", sep = "\t")
head(selfes) # checking to make sure it loaded okay
selfes$Q1 #
summary(as.factor(selfes$Q1) # making sure zeros got turned into NAs
)
names(selfes)
selfes[,c(1:2,4,6,7)
]
selfes[,c(1:2,4,6,7)]
negkey.df <- selfes[,c(3,5,8:10)]
names(selfes)
poskey.df <- selfes[,c(1:2,4,6,7)]
negkey.df <- selfes[,c(3,5,8:10)]
negkeyR.df <- 5-negkey.df
SELFES.DF <- data.frame(poskey.df, negkeyR.df)
poskey.df <- selfes[,c(1:2,4,6,7)]
negkey.df <- selfes[,c(3,5,8:10)]
negkeyR.df <- 5-negkey.df
SELFES.DF <- data.frame(poskey.df, negkeyR.df)
alpha(SELFES.DF)
d <- read.csv("~/Downloads/grad_onboard_SP25.csv", stringsAsFactors = T, na.strings = "")
par(mfrow = c(1,2))
hist(d$self.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills),
lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills),
lwd = 2, lty = "dashed", col = 'red')
hist(d$class.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Perceptions of Classmates)")
abline(v = mean(d$class.skills), lwd = 4, col = 'red')
abline(v = mean(d$class.skills) + sd(d$class.skills),
lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$class.skills) - sd(d$class.skills),
lwd = 2, lty = "dashed", col = 'red')
d[,7:16] <- lapply(d[,7:16], factor, levels = c("No", "Maybe", "Yes"))
par(mfrow = c(2,5), cex = .5)
graph.names <- c("Can Import Data", "Can Clean Data", "Can Graph a Variable", "Can Render Markdown", "Can Define LM",
"Can Interpret a LM", "Can Interpret NHST", "Can Differentiate \nSD and SE", "Can Interpret 95% CI", "Can For-Loop")
for(i in c(7:16)){
plot(d[,i], main = paste(graph.names[i-6]))
}
d <- read.csv("~/Dropbox/!GRADSTATS/Datasets/Perceptions of the Wealthy/Dawtry 2015 Study 1a.csv", # my file path
stringsAsFactors = T, # to convert strings into factors
na.strings = "") # empty data --> NA
head(d) # did it work?
names(d) #
nrow(d)
hist(d$Household_Income, breaks = 20,
main = "Household Income",
xlab = "Household Income (USD)")
selfes <- read.csv("../datasets/Self-Esteem Dataset/data.csv",
stringsAsFactors = T,
na.strings = "0", sep = "\t")
head(selfes) # checking to make sure it loaded okay
summary(as.factor(selfes$Q1)) # making sure zeros got turned into NAs
nrow(selfes) # sample size
names(selfes)
poskey.df <- selfes[,c(1:2,4,6,7)]
negkey.df <- selfes[,c(3,5,8:10)]
negkeyR.df <- 5-negkey.df
SELFES.DF <- data.frame(poskey.df, negkeyR.df)
alpha(SELFES.DF)
selfes$gender
selfes$genF <- as.factor(selfes$gender)
levels(selfes$genF)
levels(selfes$genF) <- c("Male", "Female", "Other")
levels(selfes$genF)
selfes[selfes$genF == "Female",]
selfesF <- selfes[selfes$genF == "Female",]
selfesF <- selfes[selfes$genF == "Female",]
selfesM <- selfes[selfes$genF == "Male",]
selfesO <- selfes[selfes$genF == "Other",]
par(mfrow = c(1,3))
plot(selfesF$genF)
plot(selfesM$genF)
plot(selfesO$genF)
mean(selfesF$genF, na.rm = T)
mean(selfesM$genF, na.rm = T)
mean(selfesO$genF, na.rm = T)
mean(selfesF$SELFES, na.rm = T)
mean(selfesM$SELFES, na.rm = T)
mean(selfesO$SELFES, na.rm = T)
selfesF$SELFES
selfesF
names(selfes)
d <- read.csv("~/Downloads/grad_onboard_SP25.csv", stringsAsFactors = T, na.strings = "")
par(mfrow = c(1,2))
hist(d$self.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Self-Perceptions)")
abline(v = mean(d$self.skills), lwd = 4, col = 'red')
abline(v = mean(d$self.skills) + sd(d$self.skills),
lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$self.skills) - sd(d$self.skills),
lwd = 2, lty = "dashed", col = 'red')
hist(d$class.skills, breaks = c(0:5),
col = 'black', bor = 'white', main = "Computer Skills\n(Perceptions of Classmates)")
abline(v = mean(d$class.skills), lwd = 4, col = 'red')
abline(v = mean(d$class.skills) + sd(d$class.skills),
lwd = 2, lty = "dashed", col = 'red')
abline(v = mean(d$class.skills) - sd(d$class.skills),
lwd = 2, lty = "dashed", col = 'red')
d[,7:16] <- lapply(d[,7:16], factor, levels = c("No", "Maybe", "Yes"))
par(mfrow = c(2,5), cex = .5)
graph.names <- c("Can Import Data", "Can Clean Data", "Can Graph a Variable", "Can Render Markdown", "Can Define LM",
"Can Interpret a LM", "Can Interpret NHST", "Can Differentiate \nSD and SE", "Can Interpret 95% CI", "Can For-Loop")
for(i in c(7:16)){
plot(d[,i], main = paste(graph.names[i-6]))
}
d <- read.csv("~/Dropbox/!GRADSTATS/Datasets/Perceptions of the Wealthy/Dawtry 2015 Study 1a.csv", # my file path
stringsAsFactors = T, # to convert strings into factors
na.strings = "") # empty data --> NA
head(d) # did it work?
names(d) #
nrow(d)
hist(d$Household_Income, breaks = 20,
main = "Household Income",
xlab = "Household Income (USD)")
selfes <- read.csv("../datasets/Self-Esteem Dataset/data.csv",
stringsAsFactors = T,
na.strings = "0", sep = "\t")
head(selfes) # checking to make sure it loaded okay
summary(as.factor(selfes$Q1)) # making sure zeros got turned into NAs
nrow(selfes) # sample size
names(selfes) #
poskey.df <- selfes[,c(1:2,4,6,7)] # pos-keyed items (from the codebook)
negkey.df <- selfes[,c(3,5,8:10)] # neg-keyed items (from the codebook)
negkeyR.df <- 5-negkey.df # reverse scoring the neg-keyed items
SELFES.DF <- data.frame(poskey.df, negkeyR.df) # bringing it all 2gether.
library(psych) # loading the library
alpha(SELFES.DF) # alpha reliability.
selfes$SELFES <- rowMeans(SELFES.df, na.rm = T) # creating the scale
selfes$gender
selfes$genF <- as.factor(selfes$gender)
levels(selfes$genF) <- c("Male", "Female", "Other")
names(selfes)
selfesF <- selfes[selfes$genF == "Female",]
selfesM <- selfes[selfes$genF == "Male",]
selfesO <- selfes[selfes$genF == "Other",]
par(mfrow = c(1,3)) # checking my work; should see only one bar per graph
plot(selfesF$genF)
plot(selfesM$genF)
plot(selfesO$genF) # yep!
mean(selfesF$SELFES, na.rm = T)
mean(selfesM$SELFES, na.rm = T)
mean(selfesO$SELFES, na.rm = T)
mean(selfesF$SELFES, na.rm = T)
names(selfes)
names(selfes) #
poskey.df <- selfes[,c(1:2,4,6,7)] # pos-keyed items (from the codebook)
negkey.df <- selfes[,c(3,5,8:10)] # neg-keyed items (from the codebook)
negkeyR.df <- 5-negkey.df # reverse scoring the neg-keyed items
SELFES.DF <- data.frame(poskey.df, negkeyR.df) # bringing it all 2gether.
library(psych) # loading the library
alpha(SELFES.DF) # alpha reliability.
selfes$SELFES <- rowMeans(SELFES.df, na.rm = T) # creating the scale
rowMeans(SELFES.df, na.rm = T) # creating the scale
selfes$SELFES <- rowMeans(SELFES.DF, na.rm = T) # creating the scale
hist(selfes$SELFES, col = 'black', bor = 'white', # the graph
main = "Histogram of Self-Esteem",
xlab = "Self-Esteem Score", breaks = 15)
selfes$gender
selfes$genF <- as.factor(selfes$gender)
levels(selfes$genF) <- c("Male", "Female", "Other")
names(selfes)
selfesF <- selfes[selfes$genF == "Female",]
selfesM <- selfes[selfes$genF == "Male",]
selfesO <- selfes[selfes$genF == "Other",]
par(mfrow = c(1,3)) # checking my work; should see only one bar per graph
plot(selfesF$genF)
plot(selfesM$genF)
plot(selfesO$genF) # yep!
mean(selfesF$SELFES, na.rm = T)
mean(selfesM$SELFES, na.rm = T)
mean(selfesO$SELFES, na.rm = T)
mean(selfesF$SELFES, na.rm = T)
mean(selfesM$SELFES, na.rm = T)
mean(selfesO$SELFES, na.rm = T)
sd(selfesF$SELFES, na.rm = T)
sd(selfesM$SELFES, na.rm = T)
sd(selfesO$SELFES, na.rm = T)
subset(selfes, selfes$genF == "Male")
mean(selfes[selfes$genF == "Male", ]$SELFES, na.rm = T)
subset(selfes$genF == "Male")
tapply(selfes$SELFES, selfes$genF == "Male", FUN = mean())
tapply(selfes$SELFES, selfes$genF == "Male", FUN = mean(selfes$SELFES))
tapply(selfes$SELFES, selfes$genF == "Male", FUN = mean(x))
?tapply
tapply(selfes$SELFES, selfes$genF == "Male", mean)
tapply(selfes$SELFES, selfes$genF == "Male", mean, na.rm = T)
subset(selfes, $genF == "Male")
subset(selfes, genF == "Male")
sF <- subset(selfes, genF == "Female")
mean(sF$SELFES, na.rm = T)
tapply(selfes$SELFES, selfes$genF == "Female", mean, na.rm = T) # another way
## and then tidyverse alone probably has three or four more.
library(dplyr)
group_by(selfes, genF == "Male")
sF2 <- group_by(selfes, genF == "Female")
summarize(sF2)
summarize(sF2$SELFES)
sF2$SELFES
mean(sF2$SELFES, na.rm = T)
## the tapply function.
tapply(selfes$SELFES, selfes$genF == "Female", mean, na.rm = T) # another way
group_by(selfes, selfes$genF)
sF2 <- group_by(selfes, selfes$genF)
sF2 %>% summarise()
sF2 %>% summarise(mean)
sF2 %>% summarise(mean(SELFES))
sF2 %>% summarise(mean(SELFES, na.rm = T))
plot(selfes$genF)
summary(selfes$genF)
plot(selfes$genF, col = 'black', xlab = "Gender (Self-Reported)")
boxplot(d$Household_Income)
boxplot(d$Household_Income)
hist(d$Household_Income, breaks = 20,
main = "Household Income",
xlab = "Household Income (USD)")
d$Political_Preference
d$fairness
hist(d$fairness)
summary(d$Household_Income, na.rm = T)
sd(d$Household_Income, na.rm = T)
summary(d$Household_Income, na.rm = T)
summary(d$Household_Income, na.rm = T)
sd(d$Household_Income, na.rm = T)
summary(d$Household_Income, na.rm = T)
av.exist <- array()
for(i in c(1:length(d))){
d <- rnorm(10000, mean = 100, sd = 10)
av.exist[i] <- ifelse(d == mean(d), "TRUE", "FALSE")
}
sum(av.exist == "TRUE")
av.exist <- array()
for(i in c(1:length(d))){
d <- rnorm(10000, mean = 100, sd = 10)
av.exist[i] <- ifelse(d == mean(d), "TRUE", "FALSE")
}
av.exist <- array()
for(i in c(1:length(d))){
d <- rnorm(10000, mean = 100, sd = 10)
av.exist[i] <- ifelse(d == mean(d), "TRUE", "FALSE")
}
d <- rnorm(10000, mean = 100, sd = 10)
av.person <- d - 100
sum(av.person == 0)
d <- rnorm(10000, mean = 100, sd = 10)
d
d <- round(rnorm(10000, mean = 100, sd = 10), 2)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 4)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
d <- round(rnorm(10000, mean = 100, sd = 10), 3)
av.person <- d - 100
sum(av.person == 0)
#| include: false
d <- read.csv("../datasets/Self-Esteem Dataset/data.csv", stringsAsFactors = T, na.strings = "0", sep = "\t")
head(d)
names(d)
summary(as.factor(d$Q4))
SELFES.df <- data.frame(d[,c(1:2,4,6,7)], 5-d[,c(3,5,8:10)])
summary(SELFES.df)
library(psych)
alpha(SELFES.df)
d$SELFES <- rowMeans(SELFES.df, na.rm = T)
hist(d$SELFES, col = 'black', bor = 'white',
main = "Histogram of Self-Esteem",
xlab = "Self-Esteem Score", breaks = 15)
N <- 50 # number of participants
d <- NULL
for(i in 1:1000) {
real.rt <- rnorm(N, 2000, 200)
outlier.rt <- rnorm(N, 30000, 10000)
was.outlier <- rbinom(N, 1, 0.05)
data <- ifelse(was.outlier, outlier.rt, real.rt)
d <- rbind(d, data.frame(i=i, mean=mean(data), median=median(data)))
}
hist(d$median)
N <- 50 # number of participants
d <- NULL
for(i in 1:1000) {
real.rt <- rnorm(N, 2000, 200)
outlier.rt <- rnorm(N, 30000, 10000)
was.outlier <- rbinom(N, 1, 0.05)
data <- ifelse(was.outlier, outlier.rt, real.rt)
d <- rbind(d, data.frame(i=i, mean=mean(data), median=median(data)))
}
hist(d$median)
hist(d$mean)
d <- NULL
for(n in seq(15,250,5)) {
for(i in 1:25) {
real.rt <- rnorm(n, 2000, 200)
outlier.rt <- rnorm(n, 30000, 10000)
was.outlier <- rbinom(n, 1, 0.01)
data <- ifelse(was.outlier, outlier.rt, real.rt)
d <- rbind(d, data.frame(i=i, n=n, mean=mean(data), median=median(data)))
}
}
library(ggplot2)
plt <- ggplot(d, aes(x=as.factor(n),y=mean)) +
#geom_point(alpha=0.2) +
geom_boxplot() +
theme_bw()
plt
